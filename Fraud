import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score
from sklearn.impute import SimpleImputer

data = pd.read_csv('/content/creditcard.csv')

#Data Preprocessing (Assuming binary classification with 'Class' as the target)
X = data.drop('Class', axis=1)  # Features
y = data['Class']  # Target variable

#Data Splitting
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#Classification Model (Random Forest)
model = RandomForestClassifier(n_estimators=100, random_state=42)

#Data Preprocessing-Impute missing values
imputer = SimpleImputer(strategy='mean')  # Use mean imputation, you can choose other strategies
X_train_imputed = imputer.fit_transform(X_train)
X_test_imputed = imputer.transform(X_test)

#Model Training
model.fit(X_train_imputed, y_train)

#Model Evaluation
y_pred = model.predict(X_test_imputed)
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f'Accuracy: {accuracy}')
print(f'Classification Report:\n{report}')
